name: ZenPacks.community.GCPExtensions

zProperties:
  DEFAULTS:
    category: GCP Extensions
  zGoogleCloudPlatformDatabasesModeled:
    type: lines
    default: ['^(?!postgres).*']
  zGoogleCloudPlatformSubscriptionsModeled:
    type: lines
    default: ['.*']

class_relationships:
  - ZenPacks.zenoss.GoogleCloudPlatform.ProjectDevice.ProjectDevice(cloudSQLInstances) 1:MC (project)CloudSQLInstance
  - ZenPacks.zenoss.GoogleCloudPlatform.ProjectDevice.ProjectDevice(pubSubTopics) 1:MC (project)PubSubTopic
  - CloudSQLInstance(cloudSQLDatabases) 1:MC (cloudSQLInstance)CloudSQLDatabase
  - PubSubTopic(pubSubSubscriptions) 1:MC (pubSubTopic)PubSubSubscription
  - ZenPacks.zenoss.GoogleCloudPlatform.ComputeZone.ComputeZone(cloudSQLInstances) 1:M (zone)CloudSQLInstance

classes:

  CloudSQLInstance:
    base: [zenpacklib.Component]
    label: CloudSQL Instance
    properties:
      gke_name:
        label: GKE NAME
        grid_display: false
      backendType:
        label: Backend Type
        grid_display: false
      gceZone:
        label: GCE Zone
        grid_display: false
      secondaryGceZone:
        label: Secondary GCE Zone
        grid_display: false
      region:
        label: Region
        grid_display: false
      projectName:
        label: Project
        grid_display: false
      status:
        label: Status
        grid_display: true
        label_width: 35
        content_width: 60
        datapoint: status_status
        enum:
          1: RUNNING
          2: SUSPENDED
          3: RUNNABLE
          4: PENDING_CREATE
          5: MAINTENANCE
          6: FAILED
          7: UNKNOWN_STATE
      ipAddress:
        label: IP Address
        grid_display: true
      connectionName:
        label: Connection Name
        grid_display: false
      databaseVersion:
        label: Database Version
        grid_display: true
      database_id:
        label: Database ID
        grid_display: false

  CloudSQLDatabase:
    base: [zenpacklib.Component]
    label: CloudSQL Database
    properties:
      DEFAULTS:
        grid_display: false
      charset:
        grid_display: false
      etag:
        grid_display: false
      collation:
        grid_display: false
      selfLink:
        grid_display: false
      shortname:
        grid_display: false

  PubSubTopic:
    base: [zenpacklib.Component]
    label: PubSub Topic
    properties:
      DEFAULTS:
        grid_display: false

  PubSubSubscription:
    base: [zenpacklib.Component]
    label: PubSub Subscription
    properties:
      messageRetentionDuration:
        grid_display: false
      deadLetterTopic:
        grid_display: false
      expirationPolicyTTL:
        grid_display: false
      retryPolicymaximumBackoff:
        grid_display: false
      retryPolicyminimumBackoff:
        grid_display: false
      ackDeadlineSeconds:
        grid_display: false

device_classes:
  /GoogleCloudPlatform:

    templates:
      CloudSQLInstance:
        targetPythonClass: ZenPacks.community.GCPExtensions.CloudSQLInstance
        datasources:
          cpu_utilization:
            type: Google Cloud Platform Stackdriver Monitoring
            aggregator: PERCENT_AVERAGE
            crossSeriesReducer: REDUCE_NONE
            filter_: resource.labels.database_id="${here/database_id}"
            metric_type: cloudsql.googleapis.com/database/cpu/utilization
            perSeriesAligner: ALIGN_MEAN
            service: cloudsql.googleapis.com
            datapoints:
              cpu_utilization: GAUGE_MIN_0_MAX_100
          mem_utilization:
            type: Google Cloud Platform Stackdriver Monitoring
            aggregator: PERCENT_AVERAGE
            crossSeriesReducer: REDUCE_NONE
            filter_: resource.labels.database_id="${here/database_id}"
            metric_type: cloudsql.googleapis.com/database/memory/utilization
            perSeriesAligner: ALIGN_MEAN
            service: cloudsql.googleapis.com
            datapoints:
              mem_utilization: GAUGE_MIN_0_MAX_100
        graphs:
          CPU Utilization:
            units: percent
            miny: 0.0
            maxy: 100.0
            graphpoints:
              CPU Utilization:
                dpName: cpu_utilization_cpu_utilization
                sequence: 1
          Memory Utilization:
            units: percent
            miny: 0.0
            maxy: 100.0
            graphpoints:
              Memory Utilization:
                dpName: mem_utilization_mem_utilization
                sequence: 1

      CloudSQLDatabase:
        targetPythonClass: ZenPacks.community.GCPExtensions.CloudSQLDatabase
        datasources:
          connections:
            type: Google Cloud Platform Stackdriver Monitoring
            aggregator: SUM_OR_ZERO
            filter_: metric.labels.database=${here/shortname}
            metric_type: cloudsql.googleapis.com/database/postgresql/num_backends
            perSeriesAligner: ALIGN_MEAN
            service: cloudsql.googleapis.com
            datapoints:
              connections: GAUGE_MIN_0
        graphs:
          Connections:
            miny: 0.0
            graphpoints:
              connections:
                dpName: connections_connections
                sequence: 1

      PubSubSubscription:
        datasources:
          backlog_size:
            type: Google Cloud Platform Stackdriver Monitoring
            datapoints:
              backlog_size: GAUGE
            metric_type: pubsub.googleapis.com/subscription/backlog_bytes
            filter_: resource.labels.subscription_id="${here/id}"
            perSeriesAligner: ALIGN_MEAN
            crossSeriesReducer: REDUCE_NONE
            aggregator: SUM_OR_ZERO
            service: pubsub.googleapis.com
          dead_letter_message:
            type: Google Cloud Platform Stackdriver Monitoring
            datapoints:
              dead_letter_message: GAUGE
            metric_type: pubsub.googleapis.com/subscription/dead_letter_message_count
            filter_: resource.labels.subscription_id="${here/id}"
            perSeriesAligner: ALIGN_MEAN
            crossSeriesReducer: REDUCE_NONE
            aggregator: SUM_OR_ZERO
            service: pubsub.googleapis.com
          oldest_unacked_message:
            type: Google Cloud Platform Stackdriver Monitoring
            datapoints:
              oldest_unacked_message: GAUGE
            metric_type: pubsub.googleapis.com/subscription/oldest_unacked_message_age
            filter_: resource.labels.subscription_id="${here/id}"
            perSeriesAligner: ALIGN_MEAN
            crossSeriesReducer: REDUCE_NONE
            aggregator: SUM_OR_ZERO
            service: pubsub.googleapis.com
          sent_msg:
            type: Google Cloud Platform Stackdriver Monitoring
            datapoints:
              sent_msg: GAUGE
            metric_type: pubsub.googleapis.com/subscription/sent_message_count
            filter_: resource.labels.subscription_id="${here/id}"
            perSeriesAligner: ALIGN_MEAN
            crossSeriesReducer: REDUCE_NONE
            aggregator: SUM_OR_ZERO
            service: pubsub.googleapis.com
          unacked_msg:
            type: Google Cloud Platform Stackdriver Monitoring
            datapoints:
              unacked_msg: GAUGE
            metric_type: pubsub.googleapis.com/subscription/num_undelivered_messages
            filter_: resource.labels.subscription_id="${here/id}"
            perSeriesAligner: ALIGN_MEAN
            crossSeriesReducer: REDUCE_NONE
            aggregator: SUM_OR_ZERO
            service: pubsub.googleapis.com
        graphs:
          Backlog Size:
            units: bytes
            base: true
            miny: 0.0
            graphpoints:
              Backlog Size:
                dpName: backlog_size_backlog_size
          Messages:
            units: messages
            miny: 0.0
            graphpoints:
              Dead Letter Message Count:
                dpName: dead_letter_message_dead_letter_message
              Sent Message Count:
                dpName: sent_msg_sent_msg
              Unacked Message Count:
                dpName: unacked_msg_unacked_msg
          Age:
            units: seconds
            miny: 0.0
            graphpoints:
              Oldest unacked message age:
                dpName: oldest_unacked_message_oldest_unacked_message
